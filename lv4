SELECT CONCAT(SUBSTRING(ime, 1, 1), SUBSTRING(prezime, 1, 1)) AS inicijali, YEAR(datRod) AS godina_rodenja
FROM student;



SELECT * 
FROM student
ORDER BY datRod ASC;

SELECT TOP 1 ime, prezime, datRod
FROM student
WHERE spol = 'F'
ORDER BY datRod ASC;


/* ukupni broj studenata iz tablice student */

SELECT COUNT(*) AS ukupan_broj_studenata FROM student;

/* iz koliko razlicitih mjesta dolaze studenti fakulteta */

SELECT COUNT(DISTINCT pbrPreb) AS broj_razlicitih_mjesta FROM student;

/* prosjecnu ocjenu svih polozenih predmeta u tablici ispit */

SELECT ROUND (AVG(cast(ocjena AS float)),2) AS prosjecna_ocjena
FROM ispit;

/*Ispisati ime i prezime i prosječnu ocjenu svih uspješno položenih ispita za
svakog pojedinog studenta, posloženo od najveće do najmanje prosječne ocjene.   */

SELECT ime, prezime, ROUND (AVG(cast(ocjena AS float)),2) AS prosjecna_ocjena1
FROM student 
JOIN ispit  ON mbr = mbrStud
WHERE ocjena > 1
GROUP BY mbr , ime, prezime
ORDER BY prosjecna_ocjena1 DESC;


SELECT * 
FROM ispit

/* Ispisati matični broj studenata koji imaju prosječnu ocjenu položenih ispita veću od 2.5 */

SELECT 
student.mbr AS MaticniBroj,
student.ime AS Ime,
student.prezime AS Prezime,
AVG(ispit.ocjena) AS ProsjecnaOcjena
FROM
student
JOIN
ispit ON student.mbr = ispit.mbrStud
WHERE
ispit.ocjena >= 2
GROUP BY
student.mbr, student.ime, student.prezime
HAVING
AVG(ispit.ocjena) > 2.5
ORDER BY
ProsjecnaOcjena DESC;

/* Kreirati pogled koji ce imati atribute slične kao u tablici ispit,
ali će umjesto matičnog broja studenta imati ime i prezime studenta,
a umjesto šifre predmeta – naziv predmeta.  */


CREATE VIEW hulakPogled AS
SELECT ime AS ImeStudenta, prezime AS PrezimeStudenta, naziv AS NazivPredmeta, ocjena, datIspita
FROM ispit 
JOIN student s ON mbr = mbrStud
JOIN predmet p ON sifra = sifPredmeta;

DROP VIEW hulakPogled

SELECT *
from hulakPogled